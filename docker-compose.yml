version: '3.8'

services:
  # Base de donn√©es PostgreSQL
  postgres:
    image: postgres:15-alpine
    container_name: lucky_kangaroo_postgres
    environment:
      POSTGRES_DB: lucky_kangaroo
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backend/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - lucky_kangaroo_network

  # Redis pour le cache et les sessions
  redis:
    image: redis:7-alpine
    container_name: lucky_kangaroo_redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - lucky_kangaroo_network

  # Backend Flask
  backend:
    build: ./backend
    container_name: lucky_kangaroo_backend
    environment:
      - FLASK_ENV=development
      - DATABASE_URL=postgresql://postgres:password@postgres:5432/lucky_kangaroo
      - REDIS_URL=redis://redis:6379/0
    ports:
      - "5000:5000"
    volumes:
      - ./backend:/app
      - backend_uploads:/app/uploads
    depends_on:
      - postgres
      - redis
    networks:
      - lucky_kangaroo_network

  # Frontend React
  frontend:
    build: ./frontend
    container_name: lucky_kangaroo_frontend
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    depends_on:
      - backend
    networks:
      - lucky_kangaroo_network

  # Nginx (reverse proxy)
  nginx:
    image: nginx:alpine
    container_name: lucky_kangaroo_nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/ssl:/etc/nginx/ssl
    depends_on:
      - backend
      - frontend
    networks:
      - lucky_kangaroo_network

volumes:
  postgres_data:
  redis_data:
  backend_uploads:

networks:
  lucky_kangaroo_network:
    driver: bridge