services:
  postgres:
    image: postgis/postgis:16-3.4
    container_name: lk-postgres
    environment:
      POSTGRES_DB: luckykangaroo
      POSTGRES_USER: lk
      POSTGRES_PASSWORD: lkpass
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U lk -d luckykangaroo"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  redis:
    image: redis:7
    container_name: lk-redis
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 3s
      retries: 5
    restart: unless-stopped

  app:
    build: .
    container_name: lk-app
    command: ["gunicorn","--bind","0.0.0.0:5000","--workers","2","--worker-class","gevent","--timeout","120","wsgi:application"]
    env_file: .env
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    ports:
      - "5000:5000"
    restart: unless-stopped

  worker:
    build: .
    container_name: lk-worker
    command: ["celery","-A","celery_worker.celery","worker","--loglevel=INFO"]
    env_file: .env
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    restart: unless-stopped

  beat:
    build: .
    container_name: lk-beat
    command: ["celery","-A","celery_worker.celery","beat","--loglevel=INFO"]
    env_file: .env
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    restart: unless-stopped

volumes:
  pgdata:
